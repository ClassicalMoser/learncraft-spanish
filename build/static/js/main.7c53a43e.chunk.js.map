{"version":3,"sources":["BackendFetchFunctions.js","ExampleRetriever.js","Menu.js","DataModel.js","SimpleQuizApp.js","LoginButton.js","LogoutButton.js","SRSQuizApp.js","LCSPQuizApp.js","App.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","backendUrl","process","getLessonsFromBackend","_x","_getLessonsFromBackend","apply","arguments","_asyncToGenerator","_callee","token","fetchUrl","tableFromBackend","_context","concat","fetch","headers","Authorization","res","ok","json","console","log","getVocabFromBackend","_x2","_getVocabFromBackend","_callee2","_context2","getExamplesFromBackend","_x3","_getExamplesFromBackend","_callee3","_context3","getLcspQuizzesFromBackend","_x4","_getLcspQuizzesFromBackend","_callee4","_context4","getUserDataFromBackend","_x5","_getUserDataFromBackend","_callee5","_context5","data","sort","a","b","sortReference","getMyStudentExamplesFromBackend","_x6","_getMyStudentExamplesFromBackend","_callee6","_context6","getMyExamplesFromBackend","_x7","_getMyExamplesFromBackend","_callee7","_context7","createStudentExample","_x8","_x9","_x10","_createStudentExample","_callee8","studentId","exampleId","messageFromBackend","_context8","studentid","exampleid","updateStudentExample","_x11","_x12","_x13","_x14","_updateStudentExample","_callee9","updateId","reviewDate","newInterval","_context9","deleteStudentExample","_x15","_x16","_deleteStudentExample","_callee10","recordId","_context10","deleteid","ExampleRetriever","_ref","resetFunction","getAccessTokenSilently","useAuth0","_useState","useState","_useState2","_slicedToArray","isLoaded","setIsLoaded","_useState3","_useState4","vocabSearchTerm","setVocabSearchTerm","_useState5","_useState6","grammarSearchTerm","setGrammarSearchTerm","_useState7","_useState8","selectedCourse","setSelectedCourse","_useState9","_useState10","selectedLesson","setSelectedLesson","_useState11","_useState12","lessonTable","setLessonTable","_useState13","_useState14","exampleTable","setExampleTable","_useState15","_useState16","vocabularyTable","setVocabularyTable","_useState17","_useState18","suggestedVocab","setSuggestedVocab","_useState19","_useState20","requiredVocab","setRequiredVocab","_useState21","_useState22","noSpanglish","setNoSpanglish","_useState23","_useState24","shuffleSentences","_useState25","_useState26","displayExamples","setDisplayExamples","toggleSpanglish","parseCourseLessons","lessonTableToParse","lessonsParsedByCourse","lessons","lesson","lessonNameArray","split","sortByLesson","lessonNumber","parseInt","courses","lessonsParsedByVocab","_toConsumableArray","course","courseIndex","combinedVocabulary","lessonIndex","vocabIncluded","word","includes","vocabKnown","parseLessonsByVocab","makeExamplesTable","examples","allExamples","shuffledSentences","map","Math","random","_ref2","shuffleExamples","filter","example","vocabComplete","isGood","vocabName","filterExamplesBySelectedVocab","allowedVocab","item","isAllowed","filterExamplesByAllowedVocab","spanglish","sortVocab","frequencyRank","wordIdiom","getVocab","_getVocab","accessToken","vocab","authorizationParams","audience","scope","t0","message","getExamples","_getExamples","getLessons","_getLessons","useEffect","_startUp","getData","beginningData","_ref3","vocabPromise","examplePromise","lessonPromise","t1","t2","startUp","vocabInput","grammarInput","filteredVocab","term","lowerTerm","toLowerCase","lowerVocabInput","lowerGrammar","vocabularySubcategorySubcategoryName","lowerGrammarInput","suggestTen","filterVocabularyByInput","React","createElement","className","style","backgroundColor","onClick","onSubmit","e","preventDefault","onChange","findIndex","_objectSpread","lastIndex","updateActiveCourse","target","courseSelector","indexOf","makeCourseSelector","number","numberInt","find","element","updateActiveLesson","lessonSelector","makeLessonSelector","vocabNumber","vocabObject","newRequiredVocab","addVocabToRequiredVocab","use","removeVocabFromRequiredVocab","copiedText","spanishExample","englishTranslation","join","navigator","clipboard","writeText","Menu","setCurrentApp","examplesTable","userData","_useAuth","isAuthenticated","user","isLoading","sentenceLookup","SimpleQuizApp","studentID","studentName","studentExamplesTable","quizReady","setQuizReady","examplesToReview","setExamplesToReview","currentExampleNumber","setCurrentExampleNumber","languageShowing","setLanguageShowing","playing","setPlaying","toggleQuizReady","toggleLanguageShowing","_toggleLanguageShowing","whichAudio","currentAudioUrl","_deleteFlashcard","exampleRecordId","getStudentExampleRecordId","updatedReviewList","studentExampleRecordId","relatedExample","splice","display","justifyContent","randomizedQuizExamples","array","randomizedArray","vanishingArray","randIndex","floor","randomArrayItem","randomize","deleteFlashcard","ReactHowler","src","LoginButton","loginWithRedirect","LogoutButton","logout","logoutParams","returnTo","window","location","origin","quizLength","isAuthorized","currentExample","difficultySettable","setDifficultySettable","incrementExample","sendUpdate","_sendUpdate","today","Date","getStudentExampleFromExample","getIntervalFromExample","reviewInterval","getDueDateFromExample","nextReviewDate","getDueExamples","dateArg","isBeforeToday","difficulty","limitedExamples","currentInterval","LCSPQuizApp","updateWithoutReset","studentExamples","_ref$userData","dataLoaded","setDataLoaded","setExamplesTable","quizTable","setQuizTable","chosenQuiz","setChosenQuiz","_addToExamples","isKnown","getLCSPQuizzes","_getLCSPQuizzes","chosenQuizNickname","quizPromise","quizNickname","flexDirection","alignContent","margin","width","marginBottom","height","textAlign","quizList","itemArray","quizNumber","makeQuizList","quizSelections","makeQuizSelections","exampleArray","quizExamples","currentQuizNickname","chosenExampleIdArray","exampleReviewArray","exampleToAdd","filterExamplesByCurrentQuiz","addToExamples","require","config","App","emailAddress","qbUserData","setQbUserData","setStudentExamplesTable","userLoadingComplete","setUserLoadingComplete","currentApp","getUserData","_getUserData","updateExamplesTable","userStudentExampleData","userExampleData","updateExamplesWithoutReset","_userSetup","userSetup","cursor","SRSQuizApp","ReactDOM","createRoot","document","getElementById","render","StrictMode","Auth0Provider","domain","clientId","redirect_uri"],"mappings":"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","file":"static/js/main.7c53a43e.chunk.js","sourcesContent":["const oldBackendUrl = 'lol'\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\n//console.log(backendUrl);\n\nexport async function getLessonsFromBackend(token) {\n    let fetchUrl = `${backendUrl}public/lessons`\n    //console.log(`Fetching ${fetchUrl}`)\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET', headers: {Authorization: `Bearer ${token}`}})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    return tableFromBackend; \n}\n\nexport async function getVocabFromBackend(token) {\n    let fetchUrl = `${backendUrl}public/vocabulary`\n    //console.log(`Fetching ${fetchUrl}`)\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET', headers: {Authorization: `Bearer ${token}`}})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    return tableFromBackend;\n    \n}\n\nexport async function getExamplesFromBackend(token) {\n    let fetchUrl = `${backendUrl}public/examples`\n    //console.log(`Fetching ${fetchUrl}`)\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET', headers: {Authorization: `Bearer ${token}`}})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    return tableFromBackend; \n}\n\nexport async function getLcspQuizzesFromBackend(token) {\n    let fetchUrl = `${backendUrl}public/lcspQuizExamples`\n    //console.log(`Fetching ${fetchUrl}`)\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET', headers: {Authorization: `Bearer ${token}`}})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    return tableFromBackend; \n}\n\nexport async function getUserDataFromBackend(token) {\n    let fetchUrl = `${backendUrl}my-data`\n    //console.log(`Fetching ${fetchUrl}`)\n\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET',headers: {Authorization: `Bearer ${token}`}})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                function sortFunction (a,b){\n                    if(a.sortReference > b.sortReference){\n                        return 1;\n                    }\n                    if(a.sortReference < b.sortReference){\n                        return -1;\n                    }\n                    return 0\n\n                }\n                const data = [res];\n                data.sort(sortFunction);\n                //console.log(data);\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return tableFromBackend;\n}\n\nexport async function getMyStudentExamplesFromBackend(token) {\n    let fetchUrl = `${backendUrl}my-student-examples`\n\n    //console.log(`Fetching ${fetchUrl}`)\n\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET', headers: {Authorization: `Bearer ${token}`}})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return tableFromBackend;\n}\n\nexport async function getMyExamplesFromBackend(token) {\n    let fetchUrl = `${backendUrl}my-examples`\n\n    //console.log(`Fetching ${fetchUrl}`)\n\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET', headers: {Authorization: `Bearer ${token}`}})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return tableFromBackend;\n}\n\nexport async function createStudentExample(token, studentId, exampleId) {\n    const headers = {Authorization: `Bearer ${token}`, studentid: studentId, exampleid: exampleId}\n    //console.log(headers)\n    let fetchUrl = `${backendUrl}create-my-student-example`\n    //console.log(`Fetching ${fetchUrl}`)\n    const messageFromBackend = await fetch(fetchUrl,{method:'POST', headers: headers})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return messageFromBackend;\n}\n\nexport async function updateStudentExample(token, updateId, reviewDate, newInterval) {\n    const headers = {Authorization: `Bearer ${token}`, updateId: updateId, reviewDate: reviewDate, newInterval: newInterval}\n    //console.log(headers)\n    let fetchUrl = `${backendUrl}update-my-student-example`\n    //console.log(`Fetching ${fetchUrl}`)\n    const messageFromBackend = await fetch(fetchUrl,{method:'POST', headers: headers})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return messageFromBackend;\n}\n\nexport async function deleteStudentExample(token, recordId) {\n    const headers = {Authorization: `Bearer ${token}`, deleteid: recordId}\n    //console.log(headers)\n    let fetchUrl = `${backendUrl}delete-my-student-example`\n    //console.log(`Fetching ${fetchUrl}`)\n    const messageFromBackend = await fetch(fetchUrl,{method:'DELETE', headers: headers})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return messageFromBackend;\n}","import React, {useState, useEffect, useRef} from 'react';\nimport { getVocabFromBackend, getExamplesFromBackend, getLessonsFromBackend} from './BackendFetchFunctions';\nimport './App.css';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// This script displays the Database Tool (Example Retriever), where coaches can lookup example sentences on the database by vocab word\nexport default function ExampleRetriever({resetFunction}) {\n  const {getAccessTokenSilently} = useAuth0();\n  \n  const [isLoaded, setIsLoaded] = useState(false)\n  const [vocabSearchTerm, setVocabSearchTerm] = useState('')\n  const [grammarSearchTerm, setGrammarSearchTerm] = useState('')\n  const [selectedCourse, setSelectedCourse] = useState('None Selected')\n  const [selectedLesson, setSelectedLesson] = useState({})\n  const [lessonTable, setLessonTable] = useState([])\n  const [exampleTable, setExampleTable] = useState([])\n  const [vocabularyTable, setVocabularyTable] = useState([])\n  const [suggestedVocab, setSuggestedVocab] = useState([])\n  const [requiredVocab, setRequiredVocab] = useState([])\n  const [noSpanglish, setNoSpanglish] = useState(false)\n  const [shuffleSentences, setShuffleSentences] = useState(false)\n  const [displayExamples, setDisplayExamples] = useState([])\n\n  function toggleSpanglish () {\n    if (noSpanglish) {\n      setNoSpanglish(false)\n    } else {\n      setNoSpanglish(true)\n    }\n  }\n\n  function parseCourseLessons(lessonTableToParse) {\n    const lessonsParsedByCourse = [{name: 'LearnCraft Spanish',lessons:[]},{name: 'Accelerated Spanish',lessons:[]},{name: '1-Month Challenge',lessons:[]},{name: '2-Month Challenge',lessons:[]}]\n    lessonTableToParse.forEach((lesson)=> {\n      const lessonNameArray = lesson.lesson.split(\" \")\n      //console.log(lessonNameArray[0])\n      function sortByLesson (a,b) {\n        if (a.lessonNumber > b.lessonNumber) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n      switch (lessonNameArray[0]) {\n        case ('lcsp'): {\n          lesson.lessonNumber = parseInt(lessonNameArray[1])\n          //console.log(lesson.lessonNumber)\n          lessonsParsedByCourse[0].lessons.push(lesson)\n          lessonsParsedByCourse[0].lessons.sort(sortByLesson)\n          break\n        }\n        case('AS'): {\n          lesson.lessonNumber = parseInt(lessonNameArray[2])\n          //console.log(lesson.lessonNumber)\n          lessonsParsedByCourse[1].lessons.push(lesson)\n          lessonsParsedByCourse[1].lessons.sort(sortByLesson)\n          break\n        }\n        case('SI1M'): {\n          lesson.lessonNumber = parseInt(lessonNameArray[2])\n          //console.log(lesson.lessonNumber)\n          lessonsParsedByCourse[2].lessons.push(lesson)\n          lessonsParsedByCourse[2].lessons.sort(sortByLesson)\n          break\n        }\n        case('2mc'): {\n          lesson.lessonNumber = parseInt(lessonNameArray[1][1])*100 + parseInt(lessonNameArray[1][3])\n          //console.log(lesson.lessonNumber)\n          lessonsParsedByCourse[3].lessons.push(lesson)\n          lessonsParsedByCourse[3].lessons.sort(sortByLesson)\n          break\n        }\n        default:\n      }\n    })\n    function parseLessonsByVocab (courses) {\n      const lessonsParsedByVocab = [...courses]\n      courses.forEach((course, courseIndex) => {\n        if (courseIndex < 3) {\n          const combinedVocabulary = []\n          course.lessons.forEach((lesson, lessonIndex) => {\n            lesson.vocabIncluded.forEach((word) => {\n              if (!combinedVocabulary.includes(word)) {\n                combinedVocabulary.push(word)\n              }\n            })\n            lessonsParsedByVocab[courseIndex].lessons[lessonIndex].vocabKnown=[...combinedVocabulary]\n          })\n          //console.log(lessonsParsedByVocab[courseIndex])\n        } else {\n          const combinedVocabulary = [...lessonsParsedByVocab[2].lessons[19].vocabKnown]\n          //console.log(combinedVocabulary.length)\n          course.lessons.forEach((lesson, lessonIndex) => {\n            //console.log(lesson.vocabIncluded.length)\n            lesson.vocabIncluded.forEach((word) => {\n              if (!combinedVocabulary.includes(word)) {\n                combinedVocabulary.push(word)\n              }\n            })\n            lessonsParsedByVocab[courseIndex].lessons[lessonIndex].vocabKnown=[...combinedVocabulary]\n            //console.log(lessonsParsedByVocab[courseIndex].lessons[lessonIndex].vocabKnown.length)\n          })\n          //console.log(lessonsParsedByVocab[courseIndex])\n        }\n      })\n      return lessonsParsedByVocab\n    }\n\n    const parsedLessons = parseLessonsByVocab(lessonsParsedByCourse)\n    //console.log(parsedLessons)\n    return parsedLessons\n  }\n\n  function makeCourseSelector () {\n    const courseSelector = []\n    lessonTable.forEach((item)=> {\n      courseSelector.push(<option key = {lessonTable.indexOf(item)} value = {item.name}>{item.name}</option>)\n    })\n    return courseSelector\n  }\n\n  function updateActiveCourse (name) {\n    //console.log(name)\n    const courseIndex = lessonTable.findIndex(item=> item.name === name)\n    //console.log(courseIndex)\n    const course = {...lessonTable[courseIndex]}\n    //console.log(course)\n    setSelectedCourse(course)\n    if (course.lessons) {\n      const lastIndex = course.lessons.length -1\n      //console.log(lastIndex)\n      //console.log(course.lessons[lastIndex])\n      setSelectedLesson(course.lessons[lastIndex])\n    } else {\n      setSelectedLesson({})\n    }\n  }\n\n  function makeLessonSelector () {\n      const lessonSelector = []\n      selectedCourse.lessons.forEach((lesson)=>{\n        lessonSelector.push(<option key = {lesson.lessonNumber} value = {lesson.lessonNumber}> Lesson {lesson.lessonNumber}</option>)\n      })\n      return lessonSelector\n  }\n\n  function updateActiveLesson (number) {\n    //console.log(number)\n    const numberInt = parseInt(number)\n    const lesson = selectedCourse.lessons.find(element => element.lessonNumber===numberInt)\n    //console.log(lesson)\n    setSelectedLesson(lesson)\n  }\n\n  function addVocabToRequiredVocab (vocabNumber) {\n    const vocabObject = vocabularyTable.find(object => (object.recordId === vocabNumber))\n    //console.log(vocabObject)\n    const newRequiredVocab = [...requiredVocab];\n    newRequiredVocab.push(vocabObject)\n    //console.log(newRequiredVocab)\n    setRequiredVocab(newRequiredVocab)\n    setVocabSearchTerm(\"\")\n    setGrammarSearchTerm(\"\")\n  }\n\n  function removeVocabFromRequiredVocab (vocabNumber) {\n    //console.log(vocabObject)\n    const newRequiredVocab = requiredVocab.filter((item) => item.recordId!==vocabNumber)\n    //console.log(newRequiredVocab)\n    setRequiredVocab(newRequiredVocab)\n  }\n  \n  function filterExamplesByAllowedVocab(examples) {\n    if (selectedLesson.vocabKnown) {\n      const allowedVocab = selectedLesson.vocabKnown\n      //console.log(allowedVocab)\n      const filteredByAllowed = examples.filter((item) => {\n        let isAllowed = true\n        if (item.vocabIncluded.length === 0 || item.vocabComplete === false) {\n          isAllowed = false\n        }\n        item.vocabIncluded.forEach((word) => {\n          if (!allowedVocab.includes(word)) {\n            isAllowed = false;\n          }\n        })\n        //console.log(`Item: ${item.vocabIncluded} Status: ${isAllowed}`)\n        return isAllowed\n      })\n      return filteredByAllowed\n    } else {\n      return examples\n    }\n  }\n\n\n  function filterExamplesBySelectedVocab(examples) {\n    if (requiredVocab.length > 0){\n      const filteredExamples = examples.filter(example => {\n          if(example.vocabIncluded.length === 0 || example.vocabComplete === false) {\n              return false\n          }\n          //console.log(example.vocabIncluded)\n          let isGood = false\n          requiredVocab.forEach((word) => {\n            //console.log(word.vocabName)\n            if (!isGood) {\n              isGood = example.vocabIncluded.includes(word.vocabName)\n            }\n          })\n          return isGood\n      })\n      return filteredExamples\n    } else {\n      return examples\n    }\n  }\n\n  function filterBySpanglish (examples) {\n    if(noSpanglish){\n      const filteredBySpanglish = examples.filter((item) => {\n        if (item.spanglish === 'esp'){\n          return true\n        }\n          return false\n      })\n      return filteredBySpanglish\n    } else {\n      return examples\n    }\n  }\n\n  function shuffleExamples (examples) {\n    let shuffled = examples\n    .map(value => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value)\n    return shuffled\n  }\n\n\n  function makeExamplesTable() {\n    const allExamples = [...exampleTable]\n    const filteredBySpanglish = filterBySpanglish(allExamples)\n    const filteredByAllowed = filterExamplesByAllowedVocab(filteredBySpanglish)\n    const filteredByRequired = filterExamplesBySelectedVocab(filteredByAllowed)\n    const shuffledSentences = shuffleExamples(filteredByRequired)\n    //console.log(shuffledSentences)\n    setDisplayExamples(shuffledSentences)\n  }\n\n  function displayExamplesTable() {\n    const tableToDisplay = displayExamples.map((item) => {\n      return (<div className='exampleCard' key={item.recordId}>\n        <div className='exampleCardSpanishText'>\n          <h3>{item.spanishExample}</h3>\n        </div>\n        <div className='exampleCardEnglishText'>\n          <h4>{item.englishTranslation}</h4>\n        </div>\n      </div>)\n    })\n    return tableToDisplay\n  }\n\n  // called when user clicks 'Copy as List' button\n  // copies sentences in a list format with all english sentences first & then all spanish sentences\n  function copySentences() {\n    const englishSentences = displayExamples.map(example => {\n        return example.englishTranslation\n    }).join('\\n')\n    const spanishSentences = displayExamples.map(example => {\n        return example.spanishExample\n    }).join('\\n')\n    //\n    const copiedText = englishSentences + '\\n\\n' + spanishSentences\n    navigator.clipboard.writeText(copiedText)\n  }\n\n  // called when user clicks 'Copy as Table' button\n  // copies sentences in a table format to be pasted into a google doc or excel sheet\n  function copyTable() {\n    const headers = 'Spanish\\tEnglish\\n'\n    const table = displayExamples.map(example => {\n        return example.spanishExample + '\\t' + example.englishTranslation\n    }).join('\\n')\n\n    const copiedText = headers + table\n    navigator.clipboard.writeText(copiedText)\n  }\n\n  function filterVocabularyByInput (vocabInput, grammarInput) {\n    //console.log(grammarInput)\n    function filterFunction (term) {\n      const lowerTerm = term.wordIdiom.toLowerCase()\n      const lowerVocabInput = vocabInput.toLowerCase()\n      const lowerGrammar = term.vocabularySubcategorySubcategoryName.toLowerCase()\n      const lowerGrammarInput = grammarInput.toLowerCase()\n      \n      if (lowerTerm.includes(lowerVocabInput)&&lowerGrammar.includes(lowerGrammarInput)){\n        return true\n      }\n      return false\n    }\n    const filteredVocab = vocabularyTable.filter(filterFunction);\n    //console.log(filteredVocab)\n    const suggestTen = []\n    for (let i = 0; i < 10; i++){\n      if(filteredVocab[i]) {\n        suggestTen.push(filteredVocab[i])\n      }\n    }\n    setSuggestedVocab(suggestTen);\n  }\n\n  function sortVocab (a, b) {\n    if (a.frequencyRank===b.frequencyRank){\n        if (!a.wordIdiom.includes(\" \") && b.wordIdiom.includes(\" \")){\n          return 1;\n        } else if (a.wordIdiom.includes(\" \") && !b.wordIdiom.includes(\" \")){\n          return -1\n        }\n    } else {\n      return a.frequencyRank - b.frequencyRank\n    }\n  }\n\n  async function getVocab () {\n    try {\n      const accessToken = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: \"https://lcs-api.herokuapp.com/\",\n          scope: \"openID email profile\",\n        },\n      });\n      //console.log(accessToken)\n      const vocab = await getVocabFromBackend(accessToken)\n      .then((result) => {\n        //console.log(result)\n        const usefulData = result;\n        return usefulData\n      });\n      return vocab.sort(sortVocab)\n    } catch (e) {\n        console.log(e.message);\n    }\n  }\n\n  async function getExamples () {\n    try {\n      const accessToken = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: \"https://lcs-api.herokuapp.com/\",\n          scope: \"openID email profile\",\n        },\n      });\n      //console.log(accessToken)\n      const examples = await getExamplesFromBackend(accessToken)\n      .then((result) => {\n        //console.log(result)\n        const usefulData = result;\n        return usefulData\n      });\n      //console.log(examples)\n      return examples\n    } catch (e) {\n        console.log(e.message);\n    }\n  }\n\n  async function getLessons () {\n    try {\n      const accessToken = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: \"https://lcs-api.herokuapp.com/\",\n          scope: \"openID email profile\",\n        },\n      });\n      //console.log(accessToken)\n      const lessons = await getLessonsFromBackend(accessToken)\n      .then((result) => {\n        //console.log(result)\n        const usefulData = result;\n        return usefulData\n      });\n      //console.log(lessons) \n      return lessons\n    } catch (e) {\n        console.log(e.message);\n    }\n  }\n\n  \n  // called onced at the beginning\n  useEffect(() => {\n    async function startUp () {\n      const getData = async () => {\n        //console.log('init called')\n        // retrieving the table data\n        const vocabPromise = await getVocab()\n        const examplePromise = await getExamples()\n        const lessonPromise = await getLessons()\n        return [await vocabPromise, await examplePromise, await lessonPromise]\n      };\n      const beginningData = await getData()\n      //console.log(beginningData[0])\n      setVocabularyTable(beginningData[0])\n      setExampleTable(beginningData[1])\n      setLessonTable(parseCourseLessons(beginningData[2]))\n      //console.log('data fetched')\n    }\n    startUp()\n  }, [])\n\n  useEffect(() => {\n    if(lessonTable[0] && vocabularyTable[0] && exampleTable[0]) {\n      setIsLoaded(true)\n      makeExamplesTable()\n    } else {\n      setIsLoaded(false)\n    }\n  }, [lessonTable, vocabularyTable, exampleTable])\n\n  useEffect(() => {\n    if(vocabularyTable[1]){\n      filterVocabularyByInput(vocabSearchTerm,grammarSearchTerm)\n      //console.log(suggestedVocab);\n    }\n  }, [vocabSearchTerm,grammarSearchTerm])\n\n  useEffect(() => {\n    makeExamplesTable()\n  }, [selectedCourse, selectedLesson,requiredVocab,noSpanglish,shuffleSentences])\n\n  return(\n    <div className='flashcardFinder'>\n      {(!isLoaded) && (\n        <div>\n          <h2>Loading Flashcard Data...</h2>\n        </div>\n      )}\n\n      {(isLoaded)&&(<div>\n      <div className = 'flashcardFinderHeader'>\n        <h2>Flashcard Finder</h2>\n        <div className='filterSection'>\n          <div className='removeSpanglishBox'>\n            <h3>Spanglish</h3>\n            {(!noSpanglish) && (<button style={{backgroundColor: 'darkgreen'}} onClick={toggleSpanglish}>Included</button>)}\n            {(noSpanglish) && (<button style={{backgroundColor: 'darkred'}} onClick={toggleSpanglish}>Excluded</button>)}\n          </div>\n          <div className='lessonFilter'>\n            <h3>Search By lesson</h3>\n            <form onSubmit={(e) => (e.preventDefault)}>\n              <select className='courseList' onChange={(e) => updateActiveCourse(e.target.value)}>\n                <option>–Choose Course–</option>\n                {makeCourseSelector()}\n              </select>\n              {(selectedCourse.lessons) && (<select className='lessonList' value = {selectedLesson.lessonNumber} onChange={(e) => updateActiveLesson(e.target.value)}>\n                {makeLessonSelector()}\n              </select>)}\n            </form>\n          </div>\n          <div className='wordFilter'>\n            <h3>Search By Word</h3>\n            <div className = 'wordSearchBox'>\n                <div className='searchTermBox'>\n                  <p>Word or Idiom</p>\n                  <input type='text' onChange={(e) =>setVocabSearchTerm(e.target.value)}></input><br></br>\n                </div>\n                <div className='searchTermBox'>\n                  <p>Grammatical Function</p>\n                  <input type='text' onChange={(e) =>setGrammarSearchTerm(e.target.value)}></input>\n                </div>\n            </div>\n            {(vocabSearchTerm.length > 0 || grammarSearchTerm.length > 0) && suggestedVocab.length > 0 && (\n              <div className = 'vocabSuggestionBox'>\n                {suggestedVocab.map((item) => {\n                  return(\n                    <div key={item.recordId} className='vocabCard' onClick = {() => addVocabToRequiredVocab(item.recordId)}>\n                      <h4 className='vocabName'>{item.wordIdiom}</h4>\n                      <p className = 'vocabSubcategory'>{item.vocabularySubcategorySubcategoryName}</p>\n                      <p className='vocabUse'>{item.use}</p>\n                    </div>\n                  )\n                })}\n              </div>\n            )}\n            {(requiredVocab.length > 0) && (<div className='selectedVocab'>\n              <p>Required Words:</p>\n              {requiredVocab.map((item) => {\n                return(\n                  <div key={item.recordId} className='vocabCard' onClick = {() => removeVocabFromRequiredVocab(item.recordId)}>\n                    <h4 className='vocabName'>{item.wordIdiom}</h4>\n                    <p className = 'vocabSubcategory'>{item.vocabularySubcategorySubcategoryName}</p>\n                    <p className='vocabUse'>{item.use}</p>\n                  </div>\n                )\n              })}\n            </div>)}\n          </div>\n        </div>\n      </div>\n      <div className='examplesTable'>\n        <div className='buttonBox'>\n          <button onClick={copyTable}>Copy Table</button>\n        </div>\n        {displayExamplesTable()}\n      </div>\n    </div>)}\n  </div>)\n}\n","import React, {useState, useRef, useEffect} from 'react'\nimport './App.css'\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n\nexport default function Menu({setCurrentApp, examplesTable, userData}) {\n    const { user, isAuthenticated, isLoading } = useAuth0();\n\n    const sentenceLookup = () => {\n      if(userData === undefined) {\n        return (<div className='menuBox'>\n              <h3>Free Tools:</h3>\n              <div className= 'buttonBox'>\n                  <button className = 'exampleRetrieverButton' onClick={() => setCurrentApp(4)}>Find Flashcards</button>\n              </div>\n          </div>)\n      }\n    }\n\n  return (\n    isAuthenticated && (\n    <div className='menu'>\n        <div className='menuBox'>\n            <h3>Review Options:</h3>\n            {(examplesTable.length>0) && (<div className= 'buttonBox'>\n              <button className = 'basicQuizButton' onClick={() => setCurrentApp(1)}>All My Flashcards</button>\n              <button className = 'srsQuizButton' onClick={() => setCurrentApp(2)}>My Flashcards for Today</button>\n            </div>)}\n            <div className='buttonBox'>\n              <button className='officialQuizButton' onClick={() => setCurrentApp(3)}>Official Quizzes</button>\n            </div>\n        </div>\n        {sentenceLookup()}\n\n    </div>\n  ))\n}","export const qb = { // quickbaseTablesInfo\n    // This is where all the quickbase table names used to make queries are hardcoded & stored\n    // these are used whenenever a page needs to retrieve, update, or create data on quickbase database\n    studentExamples: {\n        name: 'student-examples',\n        id: 'br3juud42',\n        fields: ['Record ID#', 'Last Reviewed Date', 'Next Review Date', 'Review Interval', 'Related Student', 'Related example', 'Date Created']\n    },\n    students: {\n        name: 'students',\n        id: 'brrtdx784',\n        fields: ['Record ID#', 'Name', 'Email address']\n    },\n    vocabulary: {\n        name: 'vocabulary',\n        id: 'brrcdgyix',\n        fields: ['Record ID#', 'word/idiom', 'use', 'Vocabulary Subcategory - subcategory name', 'Vocab Name', 'frequency rank']\n    },\n    examples: {\n        name: 'examples',\n        id: 'brrcdgyjw',\n        fields: ['Record ID#', 'spanish example', 'english translation', 'vocab included', 'spanglish?', 'English Audio', 'Spanish Audio LA', 'Vocab Complete?']\n    },\n    lessons: {\n        name: 'Lessons',\n        id: 'brrtcungb',\n        fields: ['Record ID#', 'Lesson', 'Vocab Included', 'Sort Reference']\n    },\n    quizzes: {\n        name: 'quiz',\n        id: 'brrcdgyma',\n        fields: ['Record ID#', 'quiz nickname', ]\n    },\n    quizExamples: {\n        name: 'quiz examples',\n        id: 'brrcdgym4',\n        fields: ['Record ID#','Related Example', 'Related Quiz', 'quiz nickname']\n    }\n}","import React, {useState, useEffect, useRef} from 'react';\nimport { qb } from './DataModel';\nimport './App.css';\nimport { deleteStudentExample } from './BackendFetchFunctions';\nimport ReactHowler from 'react-howler'\nimport { useAuth0 } from '@auth0/auth0-react';\n\n\n\n\nexport default function SimpleQuizApp({studentID, studentName, examplesTable, studentExamplesTable, resetFunction}) {\n    const {getAccessTokenSilently} = useAuth0()\n    const [quizReady,setQuizReady] = useState(false);\n    const [examplesToReview, setExamplesToReview] = useState ([])\n    const [currentExampleNumber, setCurrentExampleNumber] = useState(1)\n    const [languageShowing, setLanguageShowing] = useState('english')\n    const [playing, setPlaying] = useState(false)\n\n    function togglePlaying() {\n        console.log(`Playing: ${!playing}`)\n        if (playing) {\n            setPlaying(false)\n        } else {\n            setPlaying(true)\n        }\n    }\n    \n    function toggleQuizReady() {\n        setLanguageShowing('english')\n        setPlaying(false)\n        if (quizReady) {\n            resetFunction()\n        } else {\n            setQuizReady(true)\n        }\n    }\n\n    function incrementExample() {\n        if (currentExampleNumber < examplesToReview.length){\n            setCurrentExampleNumber(currentExampleNumber+1)\n        } else {\n            setCurrentExampleNumber(examplesToReview.length)\n        }\n        setLanguageShowing('english')\n        setPlaying(false)\n    }\n    \n    function decrementExample() {\n        if (currentExampleNumber > 1){\n            setCurrentExampleNumber(currentExampleNumber-1)\n        } else {\n            setCurrentExampleNumber(1)\n        }\n        setLanguageShowing('english')\n        setPlaying(false)\n    }\n\n    async function toggleLanguageShowing () {\n        if (languageShowing === 'spanish'){\n            setLanguageShowing('english')\n            setPlaying(false)\n        } else {\n            setLanguageShowing('spanish')\n            setPlaying(false)\n        }\n    }\n\n    function handleSetupQuiz () {\n        const quizExamples = examplesTable;\n        function randomize (array) {\n            const randomizedArray = []\n            const vanishingArray = [...array];\n            for (let i = 0; i < array.length; i++) {\n                const randIndex = Math.floor(Math.random()*vanishingArray.length)\n                const randomArrayItem = vanishingArray[randIndex]\n                vanishingArray.splice(randIndex, 1)\n                randomizedArray[i] = randomArrayItem\n                }\n            return randomizedArray\n        }\n        const randomizedQuizExamples = randomize(quizExamples);\n        setExamplesToReview(randomizedQuizExamples)\n        toggleQuizReady();\n    }\n\n    const whichAudio = (languageShowing === 'spanish')?'spanishAudioLa':'englishAudio'\n\n    const currentAudioUrl = quizReady && (examplesToReview[currentExampleNumber-1])? examplesToReview[currentExampleNumber-1][whichAudio]:\"\"\n\n    async function deleteFlashcard (exampleRecordId) {\n        const getStudentExampleRecordId = () => {\n            const relatedStudentExample = studentExamplesTable.find(element => (element.relatedExample\n                ===exampleRecordId));\n            return relatedStudentExample.recordId;\n        }\n        const updatedReviewList = [...examplesToReview]\n        updatedReviewList.splice(currentExampleNumber-1,1)\n        setExamplesToReview(updatedReviewList)\n        if(currentExampleNumber>updatedReviewList.length) {\n            setCurrentExampleNumber(updatedReviewList.length)\n        }\n        setLanguageShowing('english')\n        const studentExampleRecordId = getStudentExampleRecordId(exampleRecordId)\n        try {\n            const accessToken = await getAccessTokenSilently({\n              authorizationParams: {\n                audience: \"https://lcs-api.herokuapp.com/\",\n                scope: \"openID email profile\",\n              },\n            });\n            //console.log(accessToken)\n            const data = await deleteStudentExample(accessToken, studentExampleRecordId)\n            .then((result) => {\n              //console.log(result)\n            });\n        }   catch (e) {\n            console.log(e.message);\n        }\n        if(updatedReviewList.length<1) {\n            resetFunction()\n        }\n    }\n    \n\nreturn (\n    (studentID !== 'Loading ID') && (\n    <div className='quizInterface'>\n        {/* Student Selector */}\n        <div style = {{display:quizReady?'none':'flex', justifyContent: 'space-around'}}>\n            <button onClick={handleSetupQuiz}>Begin Review</button>\n        </div>\n        \n        {/* Quiz App */}\n        <div style = {{display:quizReady?'flex':'none'}} className='quiz'>\n            <div className='exampleBox'>\n                <div style = {{display:(languageShowing==='english')?'flex':'none'}} className='englishTranslation' onClick={toggleLanguageShowing}>\n                    <p>{examplesToReview[currentExampleNumber-1]?examplesToReview[currentExampleNumber-1].englishTranslation:''}</p>\n                </div>\n                <div style = {{display:(languageShowing==='spanish')?'flex':'none'}}className='spanishExample' onClick={toggleLanguageShowing}>\n                    <p>{examplesToReview[currentExampleNumber-1]?examplesToReview[currentExampleNumber-1].spanishExample:''}</p>\n                    <button className = 'removeFlashcardButton' onClick = {() =>deleteFlashcard(examplesToReview[currentExampleNumber-1].recordId)}>Remove from My Flashcards</button>\n                </div>\n                <ReactHowler src={(currentAudioUrl===\"\")?\"https://mom-academic.s3.us-east-2.amazonaws.com/dbexamples/example+1+spanish+LA.mp3\":currentAudioUrl} playing={playing} />\n\n            </div>\n            <div className='buttonBox'>\n                <button onClick={decrementExample}>Previous</button>\n                <button style = {{display: (currentAudioUrl===\"\")? 'none' :'inherit'}} onClick = {togglePlaying}>Play/Pause Audio</button>\n                <button onClick={incrementExample}>Next</button>\n            </div>\n            <div className='buttonBox'>\n                <button onClick={toggleQuizReady}>Back to Menu</button>\n            </div>\n            <div className='progressBar2'>                \n                <div className='progressBarDescription'>Flashcard {currentExampleNumber} of {examplesToReview.length}</div>\n            </div>\n        </div>\n    </div>\n    )\n)}","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n  const { isAuthenticated, isLoading, loginWithRedirect } = useAuth0();\n\n  return (!isAuthenticated && !isLoading && (\n  <button onClick={() => loginWithRedirect()}>Log In</button>\n  ))\n};\n\nexport default LoginButton;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n  const { isAuthenticated, isLoading, logout } = useAuth0();\n\n  return (isAuthenticated &&\n    (<button onClick={() => logout({ logoutParams: { returnTo: window.location.origin } })}>\n      Log Out\n    </button>)\n  );\n};\n\nexport default LogoutButton;","import React, {useState, useEffect, useRef} from 'react';\nimport { qb } from './DataModel';\nimport { updateStudentExample, deleteStudentExample } from './BackendFetchFunctions';\nimport './App.css';\nimport ReactHowler from 'react-howler'\nimport { useAuth0 } from '@auth0/auth0-react';\n\n\n\n\nexport default function SimpleQuizApp({studentID, studentName, examplesTable, studentExamplesTable, resetFunction}) {\n    const quizLength = 20;\n    const {user, isAuthorized, getAccessTokenSilently} = useAuth0();\n    //const [studentExamplesTable, setStudentExamplesTable] = useState([])\n    //const [examplesTable, setExamplesTable] = useState([])\n    const [quizReady,setQuizReady] = useState(false);\n    const [examplesToReview, setExamplesToReview] = useState ([])\n    const [currentExampleNumber, setCurrentExampleNumber] = useState(1)\n    const [languageShowing, setLanguageShowing] = useState('english')\n    const [playing, setPlaying] = useState(false)\n    const currentExample = examplesToReview[currentExampleNumber-1]\n    const [difficultySettable, setDifficultySettable] = useState(true)\n    //console.log(currentExample)\n    //console.log(difficultySettable)\n\n\n\n    function togglePlaying() {\n        console.log(`Playing: ${!playing}`)\n        if (playing) {\n            setPlaying(false)\n        } else {\n            setPlaying(true)\n        }\n        \n    }\n    \n    function toggleQuizReady() {\n        setLanguageShowing('english')\n        setPlaying(false)\n        if (quizReady) {\n            resetFunction()\n        } else {\n            setQuizReady(true)\n        }\n    }\n\n    function incrementExample() {\n        if (currentExampleNumber < examplesToReview.length){\n            setCurrentExampleNumber(currentExampleNumber+1)\n        } else {\n            setCurrentExampleNumber(examplesToReview.length)\n        }\n        setLanguageShowing('english')\n        setPlaying(false)\n    }\n    \n    function decrementExample() {\n        if (currentExampleNumber > 1){\n            setCurrentExampleNumber(currentExampleNumber-1)\n        } else {\n            setCurrentExampleNumber(1)\n        }\n        setLanguageShowing('english')\n        setPlaying(false)\n    }\n\n    async function toggleLanguageShowing () {\n        if (languageShowing === 'spanish'){\n            setLanguageShowing('english')\n            setPlaying(false)\n        } else {\n            setLanguageShowing('spanish')\n            setPlaying(false)\n        }\n    }\n\n    async function sendUpdate (exampleId, newInterval) {\n        const today = Date()\n        try {\n            const accessToken = await getAccessTokenSilently({\n              authorizationParams: {\n                audience: \"https://lcs-api.herokuapp.com/\",\n                scope: \"openID email profile\",\n              },\n            });\n            //console.log(accessToken)\n            const userData = await updateStudentExample(accessToken, exampleId, today, newInterval)\n            .then((result) => {\n              //console.log(result)\n            });\n        }   catch (e) {\n            console.log(e.message);\n        }\n    }\n\n    function increaseDifficulty () {\n        const exampleId = getStudentExampleFromExample(currentExample).recordId;\n        const currentInterval = getIntervalFromExample(currentExample);\n        //console.log(studentExamplesTable);\n        //console.log('hard');\n        currentExample.difficulty = 'hard';\n        setDifficultySettable(false)\n        if (currentInterval > 0) {\n            sendUpdate(exampleId, (currentInterval-1))\n        } else {\n            sendUpdate(exampleId, 0)\n        }\n        incrementExample()\n    }\n\n    function decreaseDifficulty () {\n        const exampleId = getStudentExampleFromExample(currentExample).recordId;\n        const currentInterval = getIntervalFromExample(currentExample);\n        //console.log(studentExamplesTable);\n        //console.log('easy')\n        currentExample.difficulty = 'easy';\n        setDifficultySettable(false)\n        if (currentInterval >= 0) {\n        sendUpdate(exampleId, (currentInterval+1));\n        } else {\n            sendUpdate(exampleId, 1)\n        }\n        incrementExample()\n    }\n\n    async function deleteFlashcard (exampleRecordId) {\n        const getStudentExampleRecordId = () => {\n            const relatedStudentExample = studentExamplesTable.find(element => (element.relatedExample\n                ===exampleRecordId));\n            return relatedStudentExample.recordId;\n        }\n        const updatedReviewList = [...examplesToReview]\n        updatedReviewList.splice(currentExampleNumber-1,1)\n        setExamplesToReview(updatedReviewList)\n        if(currentExampleNumber>updatedReviewList.length) {\n            setCurrentExampleNumber(updatedReviewList.length)\n        }\n        setLanguageShowing('english')\n        const studentExampleRecordId = getStudentExampleRecordId(exampleRecordId)\n        try {\n            const accessToken = await getAccessTokenSilently({\n              authorizationParams: {\n                audience: \"https://lcs-api.herokuapp.com/\",\n                scope: \"openID email profile\",\n              },\n            });\n            //console.log(accessToken)\n            const data = await deleteStudentExample(accessToken, studentExampleRecordId)\n            .then((result) => {\n              //console.log(result)\n            });\n        }   catch (e) {\n            console.log(e.message);\n        }\n        if(updatedReviewList.length<1) {\n            resetFunction()\n        }\n    }\n\n    const getStudentExampleFromExample = (example) => {\n        const relatedStudentExample = studentExamplesTable.find(element => (element.relatedExample\n            ===example.recordId));\n        return relatedStudentExample;\n    }\n\n    const getIntervalFromExample = (example) => {\n        const relatedStudentExample = getStudentExampleFromExample(example);\n        const interval = relatedStudentExample.reviewInterval\n        return interval;\n    }\n\n    const getDueDateFromExample = (example) => {\n        const relatedStudentExample = getStudentExampleFromExample(example);\n        const dueDate = relatedStudentExample.nextReviewDate;\n        return dueDate;\n    }\n\n    function getDueExamples() {\n        try {const isBeforeToday = (dateArg) => {\n            const today = new Date()\n            //console.log(today)\n            const reviewDate = new Date(dateArg)\n            //console.log(reviewDate)\n            if (reviewDate >= today){\n                return false\n            }\n            return true\n        }\n        const allExamples = [...examplesTable]\n        const dueExamples = allExamples.filter((example) => isBeforeToday(getDueDateFromExample(example))/*&&(example.spanglish ==='esp')*/)\n        //console.log(dueExamples)\n        return dueExamples\n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n\n    function handleSetupQuiz () {\n        const quizExamples = getDueExamples();\n        function randomize (array) {\n            const randomizedArray = []\n            const vanishingArray = [...array];\n            for (let i = 0; i < array.length; i++) {\n                const randIndex = Math.floor(Math.random()*vanishingArray.length)\n                const randomArrayItem = vanishingArray[randIndex]\n                vanishingArray.splice(randIndex, 1)\n                randomizedArray[i] = randomArrayItem\n                }\n            return randomizedArray\n        }\n        const randomizedQuizExamples = randomize(quizExamples);\n        //console.log(randomizedQuizExamples)\n        const limitedExamples = randomizedQuizExamples.slice(0, quizLength);\n        limitedExamples.forEach(item => {item.difficulty = 'unset'})\n        const examplesWithDifficulty = limitedExamples;\n        //console.log(examplesWithDifficulty)\n        setExamplesToReview(examplesWithDifficulty)\n        toggleQuizReady();\n    }\n\n    const whichAudio = (languageShowing === 'spanish')?'spanishAudioLa':'englishAudio'\n\n    const currentAudioUrl = quizReady && (currentExample)? currentExample[whichAudio]:\"\"\n    \n    useEffect(() => {\n        if(currentExample) {\n            if(currentExample.difficulty === 'unset'){\n                //console.log(currentExample.difficulty)\n                setDifficultySettable(true)\n            } else {\n            //console.log(currentExample.difficulty)\n            setDifficultySettable(false)\n            }\n        }\n        //console.log(difficultySettable);\n    }, [currentExampleNumber])\n\n\n    return (\n        (studentID) && (\n        <div className='quizInterface'>\n            <div style = {{display:quizReady?'none':'flex', justifyContent: 'space-around'}}>\n                <button onClick={handleSetupQuiz}>Begin Review</button>\n            </div>\n\n            {quizReady && !currentExample && (\n                <div className='finishedMessage'>\n                    <p>Looks like you're all caught up! Come back tomorrow for another review.</p>\n                    <div className='buttonBox'>\n                        <button onClick={toggleQuizReady}>Back to Menu</button>\n                    </div>\n                </div>\n            )}\n        \n            {/* Quiz App */}\n            {currentExample && (<div style = {{display:quizReady?'flex':'none'}} className='quiz'>\n                <div className='exampleBox'>\n                    <div style = {{display:(languageShowing==='english')?'flex':'none'}} className='englishTranslation' onClick={toggleLanguageShowing}>\n                        <p>{currentExample?currentExample.englishTranslation:''}</p>\n                    </div>\n                    <div style = {{display:(languageShowing==='spanish')?'flex':'none'}} className='spanishExample' onClick={toggleLanguageShowing}>\n                        <p>{currentExample?currentExample.spanishExample:''}</p>\n                        <button className = 'removeFlashcardButton' onClick = {() =>deleteFlashcard(currentExample.recordId)}>Remove from My Flashcards</button>\n                    </div>\n                    <ReactHowler src={(currentAudioUrl===\"\")?\"https://mom-academic.s3.us-east-2.amazonaws.com/dbexamples/example+1+spanish+LA.mp3\":currentAudioUrl} playing={playing} />\n                </div>\n                <div className='quizControls'>\n                    <div className='buttonBox'>\n                        <button className = 'hardButton' style = {{display: (languageShowing==='spanish' && difficultySettable)?'block':'none'}} onClick={increaseDifficulty} >This was hard</button>\n                        <button className = 'easyButton' style = {{display: (languageShowing==='spanish' && difficultySettable)?'block':'none'}} onClick={decreaseDifficulty}>This was easy</button>\n                        <button className = 'hardBanner' style = {{display: (!difficultySettable && currentExample.difficulty === 'hard')?'block':'none'}} >Labeled: Hard</button>\n                        <button className = 'easyBanner' style = {{display: (!difficultySettable && currentExample.difficulty ==='easy')?'block':'none'}} >Labeled: Easy</button>\n                    </div>\n                    <div className='buttonBox'>\n                        <button onClick={decrementExample}>Previous</button>\n                        <button style = {{display: (currentAudioUrl===\"\")? 'none' :'block'}} onClick = {togglePlaying}>Play/Pause Audio</button>\n                        <button onClick={incrementExample}>Next</button>\n                    </div>\n                    <div className='buttonBox'>\n                        <button onClick={toggleQuizReady}>Back to Menu</button>\n                    </div>\n                    <div className='progressBar2'>                \n                        <div className='progressBarDescription'>Flashcard {currentExampleNumber} of {examplesToReview.length}</div>\n                    </div>\n                </div>\n            </div>)}\n        </div>\n    )\n)\n}","import React, {useState, useEffect, useRef} from 'react';\nimport { qb } from './DataModel';\nimport './App.css';\nimport ReactHowler from 'react-howler'\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { getExamplesFromBackend, getLcspQuizzesFromBackend, createStudentExample } from './BackendFetchFunctions';\n\n\n\n\nexport default function LCSPQuizApp({resetFunction, updateWithoutReset, studentExamples, userData={}}) {\n    //console.log(userData)\n    const {getAccessTokenSilently} =useAuth0()\n    const [dataLoaded, setDataLoaded] = useState(false)\n    const [quizReady,setQuizReady] = useState(false);\n    const [examplesTable, setExamplesTable] = useState([]);\n    const [quizTable, setQuizTable] = useState([]);\n    const [chosenQuiz, setChosenQuiz] = useState([])\n    const [examplesToReview, setExamplesToReview] = useState ([]);\n    const [currentExampleNumber, setCurrentExampleNumber] = useState(1);\n    const [languageShowing, setLanguageShowing] = useState('english');\n    const [playing, setPlaying] = useState(false);\n\n    function togglePlaying() {\n        console.log(`Playing: ${!playing}`)\n        if (playing) {\n            setPlaying(false)\n        } else {\n            setPlaying(true)\n        }\n    }\n    \n    function toggleQuizReady() {\n        setCurrentExampleNumber(1)\n        setLanguageShowing('english')\n        setPlaying(false)\n        if (quizReady) {\n            updateWithoutReset()\n            setQuizReady(false)\n        } else {\n            setQuizReady(true)\n        }\n    }\n\n    function incrementExample() {\n        if (currentExampleNumber < examplesToReview.length){\n            setCurrentExampleNumber(currentExampleNumber+1)\n        } else {\n            setCurrentExampleNumber(examplesToReview.length)\n        }\n        setLanguageShowing('english')\n        setPlaying(false)\n    }\n    \n    function decrementExample() {\n        if (currentExampleNumber > 1){\n            setCurrentExampleNumber(currentExampleNumber-1)\n        } else {\n            setCurrentExampleNumber(1)\n        }\n        setLanguageShowing('english')\n        setPlaying(false)\n    }\n\n    async function toggleLanguageShowing () {\n        if (languageShowing === 'spanish'){\n            setLanguageShowing('english')\n            setPlaying(false)\n        } else {\n            setLanguageShowing('spanish')\n            setPlaying(false)\n        }\n    }\n\n    function makeQuizList () {\n        const quizList = []\n        quizTable.forEach((item) => {\n            const itemArray = item.quizNickname.split(\" \")\n            const quizNumber = parseInt(itemArray[2])\n            if (quizList.indexOf(quizNumber)===-1){\n                quizList.push(quizNumber)\n            }\n        })\n        //console.log(quizList)\n        /*function sortQuizzes (a,b) {\n            const parsedA = a.split(' ')\n            const parsedB = b.split(' ')\n            return parseInt(parsedA[3]) - parseInt(parsedB[3])\n        }*/\n        //quizList.sort(sortQuizzes)\n        return quizList\n    }\n\n    function makeQuizSelections () {\n        const quizList = makeQuizList()\n        const quizSelections = []\n        quizList.forEach((item)=>{\n            quizSelections.push(<option key = {item} value={item}>LearnCraft Spanish Quiz {item}</option>)\n        })\n        return quizSelections\n    }\n\n    async function addToExamples (recordId) {\n        const currentExample = examplesToReview.find(example => (example.recordId === recordId));\n        currentExample.isKnown = true;\n        incrementExample()\n        if (typeof(userData.recordId)==='number') {\n            //console.log(userData)\n            try {\n                const accessToken = await getAccessTokenSilently({\n                  authorizationParams: {\n                    audience: \"https://lcs-api.herokuapp.com/\",\n                    scope: \"openID email profile\",\n                  },\n                });\n                //console.log(accessToken)\n                //console.log(userData)\n                const data = await createStudentExample(accessToken, userData.recordId, recordId)\n                .then((result) => {\n                  //console.log(result)\n                });\n            }   catch (e) {\n                console.log(e.message);\n            }\n        }\n    }\n\n    function filterExamplesByCurrentQuiz () {\n        const currentQuizNickname = `lcsp quiz ${chosenQuiz}`\n        const chosenExampleIdArray = []\n        quizTable.forEach((item) => {\n            if (item.quizNickname === currentQuizNickname) {\n                chosenExampleIdArray.push(item.relatedExample)\n            }\n        })\n        //console.log(chosenExampleIdArray)\n        const exampleReviewArray = []\n        chosenExampleIdArray.forEach((item) => {\n            const exampleToAdd = examplesTable.find(element => element.recordId === item)\n            if(exampleToAdd !== undefined) {\n                exampleReviewArray.push(exampleToAdd)\n            }\n        })\n        //console.log(exampleReviewArray)\n        return exampleReviewArray;\n    }\n\n    function tagAssignedExamples (exampleArray) {\n        console.log(exampleArray);\n        exampleArray.forEach((example)=> {\n            const getStudentExampleRecordId = () => {\n                const relatedStudentExample = studentExamples.find(element => (element.relatedExample\n                    ===example.recordId));\n                return relatedStudentExample;\n            }\n            if (getStudentExampleRecordId() !== undefined) {\n                example.isKnown = true\n            } else {\n                example.isKnown = false\n            }\n        })\n        console.log(exampleArray)\n        return exampleArray\n    }\n\n    function handleSetupQuiz () {\n        const quizExamples = filterExamplesByCurrentQuiz();\n        console.log(quizExamples)\n        const taggedByKnown = tagAssignedExamples(quizExamples);\n        //console.log(quizExamples)\n        function randomize (array) {\n            const randomizedArray = []\n            const vanishingArray = [...array];\n            for (let i = 0; i < array.length; i++) {\n                const randIndex = Math.floor(Math.random()*vanishingArray.length)\n                const randomArrayItem = vanishingArray[randIndex]\n                vanishingArray.splice(randIndex, 1)\n                randomizedArray[i] = randomArrayItem\n                }\n            return randomizedArray\n        }\n        const randomizedQuizExamples = randomize(taggedByKnown);\n        setExamplesToReview(randomizedQuizExamples)\n        toggleQuizReady();\n    }\n\n    const whichAudio = (languageShowing === 'spanish')?'spanishAudioLa':'englishAudio'\n\n    const currentAudioUrl = quizReady && (examplesToReview[currentExampleNumber-1])? examplesToReview[currentExampleNumber-1][whichAudio]:\"\"\n\n    async function getExamples () {\n        try {\n          const accessToken = await getAccessTokenSilently({\n            authorizationParams: {\n              audience: \"https://lcs-api.herokuapp.com/\",\n              scope: \"openID email profile\",\n            },\n          });\n          //console.log(accessToken)\n          const lessons = await getExamplesFromBackend(accessToken)\n          .then((result) => {\n            //console.log(result)\n            const usefulData = result;\n            return usefulData\n          });\n          //console.log(lessons) \n          return lessons\n        } catch (e) {\n            console.log(e.message);\n        }\n    }\n\n    async function getLCSPQuizzes () {\n        try {\n          const accessToken = await getAccessTokenSilently({\n            authorizationParams: {\n              audience: \"https://lcs-api.herokuapp.com/\",\n              scope: \"openID email profile\",\n            },\n          });\n          //console.log(accessToken)\n          const lessons = await getLcspQuizzesFromBackend(accessToken)\n          .then((result) => {\n            //console.log(result)\n            const usefulData = result;\n            return usefulData\n          });\n          //console.log(lessons) \n          return lessons\n        } catch (e) {\n            console.log(e.message);\n        }\n    }\n    \n      \n      // called onced at the beginning\n      useEffect(() => {\n        async function startUp () {\n          const getData = async () => {\n            //console.log('init called')\n            // retrieving the table data\n            const examplePromise = await getExamples()\n            const quizPromise = await getLCSPQuizzes()\n            return [await examplePromise, await quizPromise]\n          };\n          const beginningData = await getData()\n          //console.log(beginningData[0])\n          setExamplesTable(beginningData[0])\n          setQuizTable(beginningData[1])\n          const chosenQuizNickname = beginningData[1][0].quizNickname\n          setChosenQuiz(parseInt(chosenQuizNickname.split(\" \")[2]))\n          setDataLoaded(true)\n          //console.log('init completed')\n        }\n        startUp()\n      }, [])\n\nreturn (\n    <div className='quizInterface'>\n        {/* Student Selector */}\n        {!dataLoaded && (\n            <h2>Loading...</h2>\n        )}\n        {dataLoaded && quizTable[0].quizNickname && (<div style = {{display:quizReady?'none':'flex', flexDirection: 'column', alignContent:'center', margin: '0 auto', justifyContent: 'space-around', width: '50%'}}>\n            <select style = {{marginBottom: '20px', height: '65px', textAlign:'center'}} onChange={(e) => setChosenQuiz(e.target.value)}>\n                {makeQuizSelections()}                \n            </select>\n            <button onClick={handleSetupQuiz}>Begin Review</button>\n        </div>)}\n        \n        {/* Quiz App */}\n        <div style = {{display:quizReady?'flex':'none'}} className='quiz'>\n            {(examplesToReview[currentExampleNumber-1] !== undefined) && (<div className='exampleBox'>\n                <div style = {{display:(languageShowing==='english')?'flex':'none'}} className='englishTranslation' onClick={toggleLanguageShowing}>\n                    <p>{examplesToReview[currentExampleNumber-1]?examplesToReview[currentExampleNumber-1].englishTranslation:''}</p>\n                </div>\n                <div style = {{display:(languageShowing==='spanish')?'flex':'none'}}className='spanishExample' onClick={toggleLanguageShowing}>\n                    <p>{examplesToReview[currentExampleNumber-1]?examplesToReview[currentExampleNumber-1].spanishExample:''}</p>\n                    {(userData.recordId !== undefined && userData.recordId !== 'Loading ID' && examplesToReview[currentExampleNumber-1].isKnown === false) && (<button className = 'addFlashcardButton' onClick = {()=>addToExamples(examplesToReview[currentExampleNumber-1].recordId)}>Add to My Flashcards</button>)}\n                </div>\n                <ReactHowler src={(currentAudioUrl===\"\")?\"https://mom-academic.s3.us-east-2.amazonaws.com/dbexamples/example+1+spanish+LA.mp3\":currentAudioUrl} playing={playing} />\n\n            </div>)}\n            <div className='buttonBox'>\n                <button onClick={decrementExample}>Previous</button>\n                <button style = {{display: (currentAudioUrl===\"\")? 'none' :'inherit'}} onClick = {togglePlaying}>Play/Pause Audio</button>\n                <button onClick={incrementExample}>Next</button>\n            </div>\n            <div className='buttonBox'>\n                <button onClick={toggleQuizReady}>Back to Quizzes</button>\n                <button onClick={resetFunction}>Back to Menu</button>\n            </div>\n            <div className='progressBar2'>                \n                <div className='progressBarDescription'>Flashcard {currentExampleNumber} of {examplesToReview.length}</div>\n            </div>\n        </div>\n    </div>\n)}","import './App.css';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { getUserDataFromBackend, getMyStudentExamplesFromBackend, getMyExamplesFromBackend} from './BackendFetchFunctions';\nimport ExampleRetriever from './ExampleRetriever';\nimport Menu from './Menu';\nimport SimpleQuizApp from './SimpleQuizApp';\nimport LoginButton from './LoginButton';\nimport LogoutButton from './LogoutButton';\nimport SRSQuizApp from './SRSQuizApp';\nimport LCSPQuizApp from './LCSPQuizApp'\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Profile from './Profile';\nrequire('dotenv').config()\n\nfunction App() {\n  const { user, isAuthenticated, getAccessTokenSilently, isLoading } = useAuth0();\n  const [qbUserData, setQbUserData]= useState({name:'Loading Name',recordId:'Loading ID',emailAddress:'Loading Email'})\n  const [studentExamplesTable, setStudentExamplesTable] = useState([])\n  const [examplesTable, setExamplesTable] = useState([])\n  const [userLoadingComplete, setUserLoadingComplete] = useState(false)\n  const [currentApp, setCurrentApp] = useState(0)\n\n  const appList = ['menu','basicQuiz','srsQuiz']\n\n  //console.log(appList[currentApp]);\n\n  async function getUserData () {\n    //console.log('getting userdata')\n    try {\n      const accessToken = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: \"https://lcs-api.herokuapp.com/\",\n          scope: \"openID email profile\",\n        },\n      });\n      //console.log(accessToken)\n      const scopes = 0;\n      const userData = await getUserDataFromBackend(accessToken)\n      .then((result) => {\n        //console.log(result)\n        const usefulData = result[0].userData[0];\n        return usefulData\n      });\n      //console.log(userData)\n      setQbUserData(userData)\n    } catch (e) {\n        console.log(e.message);\n    }\n  }\n\n  const updateExamplesTable= async () => {\n    //console.log('resetting tables')\n    setCurrentApp(0)\n    try {\n      const accessToken = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: \"https://lcs-api.herokuapp.com/\",\n          scope: \"openID email profile\",\n        },\n      });\n      const userStudentExampleData = await getMyStudentExamplesFromBackend(accessToken)\n      .then((result) => {\n        const usefulData = result\n        //console.log(usefulData)\n        return usefulData\n      });\n      //console.log(userData)\n      setStudentExamplesTable(userStudentExampleData)\n      const userExampleData = await getMyExamplesFromBackend(accessToken)\n      .then((result) => {\n        const usefulData = result\n        //console.log(usefulData)\n        return usefulData\n      });\n      //console.log(userExampleData)\n      setExamplesTable(userExampleData)\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  const updateExamplesWithoutReset = async () => {\n    //console.log('resetting tables')\n    try {\n      const accessToken = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: \"https://lcs-api.herokuapp.com/\",\n          scope: \"openID email profile\",\n        },\n      });\n      const userStudentExampleData = await getMyStudentExamplesFromBackend(accessToken)\n      .then((result) => {\n        const usefulData = result\n        //console.log(usefulData)\n        return usefulData\n      });\n      //console.log(userData)\n      setStudentExamplesTable(userStudentExampleData)\n      const userExampleData = await getMyExamplesFromBackend(accessToken)\n      .then((result) => {\n        const usefulData = result\n        //console.log(usefulData)\n        return usefulData\n      });\n      //console.log(userExampleData)\n      setExamplesTable(userExampleData)\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n\n\n\n  async function userSetup () {\n    try {\n      getUserData();\n      updateExamplesTable();\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  useEffect(() => {\n    if(user) {\n      userSetup()\n    }\n  }, [user])\n\n  useEffect(() => {\n    if (!qbUserData) {\n     setUserLoadingComplete(true) \n    } else if (qbUserData.emailAddress !== 'Loading Email') {\n      setUserLoadingComplete(true);\n    }\n    console.log(user)\n  }, [qbUserData, studentExamplesTable, examplesTable])\n\n  return (\n    <div className=\"App\" style = {{textAlign: 'center'}}>\n      <div className='div-header'style = {{textAlign: 'center'}}>\n        <h1 onClick={updateExamplesTable} style={{cursor:'pointer'}}>LearnCraft Spanish</h1>\n        {(userLoadingComplete && qbUserData) && <p>Welcome back, {qbUserData.name}!</p>}\n        {!isLoading && !isAuthenticated && (\n        <p>You must be logged in to use this app.</p>\n      )}\n      {isAuthenticated && !userLoadingComplete && (\n        <p>Loading user data...</p>\n      )}\n        <LogoutButton />\n        <LoginButton />\n      </div>\n      {isLoading && (\n        <h2>Loading...</h2>\n      )}\n      \n      {/*isAuthenticated && (\n        <Profile Name = {qbUserData.name} Email={qbUserData.emailAddress} ID = {qbUserData.recordId}/>\n      )*/}\n      {//(qbUserData.recordId !== 'Loading ID') && (<SimpleQuizApp studentID={qbUserData.recordId} studentName={qbUserData.name} examplesTable={examplesTable} studentExamplesTable={studentExamplesTable}/>)\n      }\n      {(user) && (\n        <div>\n          {(currentApp===0) && (<Menu setCurrentApp={setCurrentApp} examplesTable={examplesTable} userData={qbUserData}/>)}\n          {(currentApp===1) && (<SimpleQuizApp studentID={qbUserData.recordId} studentName={qbUserData.name} examplesTable={examplesTable} studentExamplesTable={studentExamplesTable} resetFunction={updateExamplesTable}/>)}\n          {(currentApp===2) && (<SRSQuizApp studentID={qbUserData.recordId} studentName={qbUserData.name} examplesTable={examplesTable} studentExamplesTable={studentExamplesTable} resetFunction={updateExamplesTable}/>)}\n          {(currentApp===3) && (<LCSPQuizApp resetFunction={updateExamplesTable} updateWithoutReset = {updateExamplesWithoutReset} studentExamples={studentExamplesTable} userData={qbUserData}/>)}\n          {(currentApp===4) && (<ExampleRetriever resetFunction={updateExamplesTable} />)}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\n\nroot.render(\n  <React.StrictMode>\n    <Auth0Provider\n    domain=\"dev-34nyaerydb7nt4yw.us.auth0.com\"\n    clientId=\"8EjjTUWQkoHPL1DvOfH1xePnqkZ0s8bO\"\n    authorizationParams={{\n      redirect_uri: window.location.origin,\n      audience: \"https://lcs-api.herokuapp.com/\",\n      scope: \"openID email profile read:current_user update:current_user_metadata\"\n    }}\n  >\n      <App />\n    </Auth0Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}