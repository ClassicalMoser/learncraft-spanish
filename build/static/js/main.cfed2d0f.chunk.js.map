{"version":3,"sources":["QuickbaseFetchFunctions.js","Menu.js","SimpleQuizApp.js","LoginButton.js","LogoutButton.js","SRSQuizApp.js","App.js","index.js"],"names":["backendUrl","process","getUserDataFromBackend","_x8","_getUserDataFromBackend","apply","this","arguments","_callee6","token","fetchUrl","tableFromBackend","_regeneratorRuntime","wrap","_context6","prev","next","concat","fetch","method","headers","Authorization","then","res","ok","json","data","sort","a","b","sortReference","catch","err","console","log","sent","abrupt","stop","getStudentExamplesFromBackend","_x9","_getStudentExamplesFromBackend","_callee7","_context7","getExamplesFromBackend","_x10","_getExamplesFromBackend","_callee8","_context8","updateStudentExample","_x11","_x12","_x13","_x14","_updateStudentExample","_callee9","updateId","reviewDate","newInterval","messageFromBackend","_context9","Menu","_ref","setCurrentApp","_useAuth","useAuth0","isAuthenticated","user","isLoading","react_default","createElement","className","onClick","SimpleQuizApp","studentID","examplesTable","studentName","resetFunction","studentExamplesTable","_useState","useState","_useState2","Object","slicedToArray","quizReady","setQuizReady","_useState3","_useState4","examplesToReview","setExamplesToReview","_useState5","_useState6","currentExampleNumber","setCurrentExampleNumber","_useState7","_useState8","languageShowing","setLanguageShowing","_useState9","_useState10","playing","setPlaying","toggleQuizReady","toggleLanguageShowing","_toggleLanguageShowing","asyncToGenerator","SimpleQuizApp_regeneratorRuntime","mark","_callee","_context","whichAudio","currentAudioUrl","style","display","justifyContent","randomizedQuizExamples","array","randomizedArray","vanishingArray","toConsumableArray","i","length","randIndex","Math","floor","random","randomArrayItem","splice","randomize","englishTranslation","spanishExample","lib_default","src","LoginButton","loginWithRedirect","LogoutButton","logout","logoutParams","returnTo","window","location","origin","quizLength","getAccessTokenSilently","isAuthorized","currentExample","_useState11","_useState12","difficultySettable","setDifficultySettable","incrementExample","SRSQuizApp_regeneratorRuntime","sendUpdate","_x","_x2","_sendUpdate","_callee2","exampleId","today","accessToken","_context2","Date","authorizationParams","audience","scope","result","t0","message","getStudentExampleFromExample","example","find","element","relatedExample","recordId","getIntervalFromExample","reviewInterval","getDueDateFromExample","nextReviewDate","getDueExamples","filter","dateArg","isBeforeToday","spanglish","useEffect","difficulty","limitedExamples","slice","forEach","item","currentInterval","require","config","App","name","emailAddress","qbUserData","setQbUserData","setStudentExamplesTable","setExamplesTable","userLoadingComplete","setUserLoadingComplete","currentApp","getUserData","_getUserData","App_regeneratorRuntime","userData","updateExamplesTable","_updateExamplesTable","userStudentExampleData","userExampleData","_userSetup","_callee3","_context3","e","userSetup","textAlign","src_LogoutButton","src_LoginButton","SRSQuizApp_SimpleQuizApp","ReactDOM","createRoot","document","getElementById","render","StrictMode","auth0_react_esm","domain","clientId","redirect_uri","src_App"],"mappings":"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","file":"static/js/main.cfed2d0f.chunk.js","sourcesContent":["import { qb } from './DataModel';\n// These are all the functions needed to access the data on the quickbase database\n// These get called whenever a page needs to retrieve, update, or create data on quickbase\n// Every request to quickbase requires a header & a body, so there are functions dedicated to just creating the header or the body\n\n// creates headers needed for querying data from quickbase\n// this is pretty much the same for each quickbase request\nfunction createHeaders(userToken) {\n    const headers = {\n        'QB-Realm-Hostname': 'masterofmemory.quickbase.com',\n        'User-Agent': 'NickApp',\n        'Authorization': userToken,\n        'Content-Type': 'application/json'\n    }\n    return headers\n}\n\n// creates body needed for querying data from quickbase\n// (if there's ever a case where the tables has more columns than 25, the \"select\" array will need to be increased)\nfunction createBody(tableID) {\n    return {\n        \"from\": tableID,\n        \"select\": [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\n    }\n}\n\n// go thru each row of fields & print (mainly used for testing)  \nfunction printFields(json) { \n    console.log('Fields', json.fields)\n}\n\n// camelizes string and also removes special characters like #\n// for ex: converts 'Record ID#' to 'recordId', 'word/idiom' to 'wordIdiom', 'spanglish?' to 'spanglish'\nfunction camelize(str) {\n    const strArr = str.replaceAll(/[^\\w\\s]/gi, ' ')\n    const strArr2 = strArr.split(' ')\n    const camelArr = strArr2.map((word, index) => index === 0 ? word.toLowerCase(): word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    return camelArr.join('')\n}\n\n// creates object that maps fieldNames to their corresponding numbers on quickbase database\n// essentially linking the fields names to the number they are associated with on quickbase\nfunction createFieldsJSON(fieldNames, jsonFields) {\n    const newArr = fieldNames.map(fieldName => {\n        return {\n            name: camelize(fieldName),\n            number: jsonFields.find(element => element.label.toLowerCase() === fieldName.toLowerCase()).id\n        }\n    })\n    //console.log('createFieldsJSON: ', newArr)\n    return newArr\n}\n// old version, only worked with vocab\nfunction createTable(data, linksArr) {\n    //console.log('creatTable')\n    return data.map(element => {\n        const stringedJSON = '{' +  linksArr.map(link => { return ('\\\"' + link.name + '\\\"' + ':' + '\\\"' + element[link.number].value.replaceAll('\"', '\\\\\\\"') + '\\\"')}).join(', ') + '}'\n        //console.log('stringedJSON: ', stringedJSON)\n        const parsedJSON = JSON.parse(stringedJSON)\n        \n        //console.log('parsedJSON: ', parsedJSON)\n        return parsedJSON\n    })\n}\n// new improved version that differentiates btwn array & string\n// creates the table object from the quickbase table\nfunction createTable2(data, linksArr) {\n    //console.log('creatTable')\n    return data.map(element => {\n        const stringedJSON = '{' +  linksArr.map(link => { return ('\\\"' + link.name + '\\\"' + ':' + null)}).join(', ') + '}'\n        //console.log('stringedJSON: ', stringedJSON)\n        const parsedJSON = JSON.parse(stringedJSON)\n        \n        //console.log('parsedJSON: ', parsedJSON)\n        linksArr.forEach(link => {\n            parsedJSON[link.name] = element[link.number].value\n        });\n        //console.log('parsedJSON2: ', parsedJSON)\n        return parsedJSON\n    })\n}\n\n// creates & returns tables object, which is what all the pages, like Example Retriever, use to get data from\nexport async function fetchAndCreateTable(userToken, tableInitInfo) {\n    try {\n        const res = await fetch('https://api.quickbase.com/v1/records/query',\n        {\n        method: 'POST',\n        headers: createHeaders(userToken),\n        body: JSON.stringify(createBody(tableInitInfo.id))\n        })\n        if(res.ok) {\n            // if database is ASCII\n            const buffer = await res.arrayBuffer()\n            const decoder = new TextDecoder('ASCII')\n            const text = decoder.decode(buffer)\n            const json = JSON.parse(text)\n\n            //console.log('json: ', json)\n\n            printFields(json) // don't delete\n\n            const linkedFieldsToNumsArr = createFieldsJSON(tableInitInfo.fields, json.fields)\n            const tableArr = createTable2(json.data, linkedFieldsToNumsArr)\n            return tableArr\n        }\n    } catch (err) {\n        console.log(err)\n    }\n}\n\n// This is a COPY/PASTE/EDIT of fetchAndCreateTable()\n// used by the SRSBuilder.js, to add examples to the student examples table that will be used for the corresponding student in the SRS quiz interface.\nexport async function createStudentExample(exampleID, studentID, lastReviewDate, reviewInterval, userToken) {\n    try {\n        const res = await fetch('https://api.quickbase.com/v1/records',\n        {\n        method: 'POST',\n        headers: createHeaders(userToken),\n        //body: JSON.stringify(createBodyForCreateStudentExample(exampleID, studentID, lastReviewDate, reviewInterval, qb.studentExamples.id))\n        })\n        if(res.ok) {\n            //return res.json().then(res => console.log(res))\n            return res.json().then(res => Promise.resolve(res))\n        }\n        return res.json().then(resBody => Promise.reject({status: res.status, ...resBody}))\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nconst oldBackendUrl = 'lol'\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\n//console.log(backendUrl);\n\n\nexport async function getVocabFromBackend() {\n    let fetchUrl = `${oldBackendUrl}qb-vocabulary`\n\n    //console.log(`Fetching ${fetchUrl}`)\n\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET'})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                function sortFunction (a,b){\n                    if(a.frequencyRank > b.frequencyRank){\n                        return 1;\n                    }\n                    if(a.frequencyRank < b.frequencyRank){\n                        return -1;\n                    }\n                    return 0\n                }\n                const data = JSON.parse(res);\n                data.sort(sortFunction);\n                //console.log(data);\n                return data;\n            }) \n        }\n        \n    })\n    .catch(err => console.log(err))\n\n    return tableFromBackend\n    \n}\n\nexport async function getLessonsFromBackend() {\n    let fetchUrl = `${oldBackendUrl}qb-lessons`\n\n    //console.log(`Fetching ${fetchUrl}`)\n\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET'})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                function sortFunction (a,b){\n                    if(a.sortReference > b.sortReference){\n                        return 1;\n                    }\n                    if(a.sortReference < b.sortReference){\n                        return -1;\n                    }\n                    return 0\n\n                }\n                const data = JSON.parse(res);\n                data.sort(sortFunction);\n                //console.log(data);\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return tableFromBackend;\n}\n\nexport async function getStudentsFromBackend() {\n    let fetchUrl = `${oldBackendUrl}qb-students`\n\n    //console.log(`Fetching ${fetchUrl}`)\n\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET'})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = JSON.parse(res);\n                //data.sort(sortFunction);\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return tableFromBackend;\n}\n\nexport async function getUserDataFromBackend(token) {//actually currently email address – FIX THIS\n    let fetchUrl = `${backendUrl}my-data`//actually currently email address – FIX THIS\n    //console.log(`Fetching ${fetchUrl}`)\n\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET',headers: {Authorization: `Bearer ${token}`}})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                function sortFunction (a,b){\n                    if(a.sortReference > b.sortReference){\n                        return 1;\n                    }\n                    if(a.sortReference < b.sortReference){\n                        return -1;\n                    }\n                    return 0\n\n                }\n                const data = [res];\n                data.sort(sortFunction);\n                //console.log(data);\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return tableFromBackend;\n}\n\nexport async function getStudentExamplesFromBackend(token) {\n    let fetchUrl = `${backendUrl}my-student-examples`\n\n    //console.log(`Fetching ${fetchUrl}`)\n\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET', headers: {Authorization: `Bearer ${token}`}})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return tableFromBackend;\n}\n\nexport async function getExamplesFromBackend(token) {\n    let fetchUrl = `${backendUrl}my-examples`\n\n    //console.log(`Fetching ${fetchUrl}`)\n\n    const tableFromBackend = await fetch(fetchUrl,{method:'GET', headers: {Authorization: `Bearer ${token}`}})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return tableFromBackend;\n}\n\nexport async function updateStudentExample(token, updateId, reviewDate, newInterval) {\n    const headers = {Authorization: `Bearer ${token}`, updateId: updateId, reviewDate: reviewDate, newInterval: newInterval}\n    //console.log(headers)\n    let fetchUrl = `${backendUrl}update-my-student-example`\n    //console.log(`Fetching ${fetchUrl}`)\n    const messageFromBackend = await fetch(fetchUrl,{method:'POST', headers: headers})\n    .then((res) => {\n        if(res.ok){\n            return res.json().then((res) => {\n                const data = res;\n                return data;\n            }) \n        }\n    })\n    .catch(err => console.log(err))\n    \n    return messageFromBackend;\n}","import React, {useState, useRef, useEffect} from 'react'\nimport './App.css'\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n\nexport default function Menu({setCurrentApp}) {\n    const { user, isAuthenticated, isLoading } = useAuth0();\n    \n\n\n  return (\n    isAuthenticated && (\n    <div className='menu'>\n        <h3>Review Options:</h3>\n        <div className='menuBox'>\n            <div className= 'buttonBox'>\n                <button className = 'basicQuizButton' onClick={() => setCurrentApp(1)}>All Examples</button>\n                <button className = 'basicQuizButton' onClick={() => setCurrentApp(2)}>Today's Examples</button>\n            </div>\n        </div>\n    </div>\n  ))\n}","import React, {useState, useEffect, useRef} from 'react';\nimport { qb } from './DataModel';\nimport './App.css';\nimport ReactHowler from 'react-howler'\nimport { useAuth0 } from '@auth0/auth0-react';\n\n\n\n\nexport default function SimpleQuizApp({studentID, studentName, examplesTable, studentExamplesTable, resetFunction}) {\n    const [quizReady,setQuizReady] = useState(false);\n    const [examplesToReview, setExamplesToReview] = useState ([])\n    const [currentExampleNumber, setCurrentExampleNumber] = useState(1)\n    const [languageShowing, setLanguageShowing] = useState('english')\n    const [playing, setPlaying] = useState(false)\n\n    function togglePlaying() {\n        console.log(`Playing: ${!playing}`)\n        if (playing) {\n            setPlaying(false)\n        } else {\n            setPlaying(true)\n        }\n    }\n    \n    function toggleQuizReady() {\n        setLanguageShowing('english')\n        setPlaying(false)\n        if (quizReady) {\n            resetFunction()\n        } else {\n            setQuizReady(true)\n        }\n    }\n\n    function incrementExample() {\n        if (currentExampleNumber < examplesToReview.length){\n            setCurrentExampleNumber(currentExampleNumber+1)\n        } else {\n            setCurrentExampleNumber(examplesToReview.length)\n        }\n        setLanguageShowing('english')\n        setPlaying(false)\n    }\n    \n    function decrementExample() {\n        if (currentExampleNumber > 1){\n            setCurrentExampleNumber(currentExampleNumber-1)\n        } else {\n            setCurrentExampleNumber(1)\n        }\n        setLanguageShowing('english')\n        setPlaying(false)\n    }\n\n    async function toggleLanguageShowing () {\n        if (languageShowing === 'spanish'){\n            setLanguageShowing('english')\n            setPlaying(false)\n        } else {\n            setLanguageShowing('spanish')\n            setPlaying(false)\n        }\n    }\n\n    function handleSetupQuiz () {\n        const quizExamples = examplesTable;\n        function randomize (array) {\n            const randomizedArray = []\n            const vanishingArray = [...array];\n            for (let i = 0; i < array.length; i++) {\n                const randIndex = Math.floor(Math.random()*vanishingArray.length)\n                const randomArrayItem = vanishingArray[randIndex]\n                vanishingArray.splice(randIndex, 1)\n                randomizedArray[i] = randomArrayItem\n                }\n            return randomizedArray\n        }\n        const randomizedQuizExamples = randomize(quizExamples);\n        setExamplesToReview(randomizedQuizExamples)\n        toggleQuizReady();\n    }\n\n    const whichAudio = (languageShowing === 'spanish')?'spanishAudioLa':'englishAudio'\n\n    const currentAudioUrl = quizReady && (examplesToReview[currentExampleNumber-1])? examplesToReview[currentExampleNumber-1][whichAudio]:\"\"\n    \nif (studentID === 'Loading ID') {\n    return (\n        <div>\n            <h2>Loading...</h2>\n        </div>\n    )\n}\n    \n\nreturn (\n    (studentID !== 'Loading ID') && (\n    <div className='quizInterface'>\n        {/* Student Selector */}\n        <div style = {{display:quizReady?'none':'flex', justifyContent: 'space-around'}}>\n            <button onClick={handleSetupQuiz}>Basic Cumulative Review</button>\n        </div>\n        \n        {/* Quiz App */}\n        <div style = {{display:quizReady?'flex':'none'}} className='quiz'>\n            <div className='exampleBox'>\n                <div style = {{display:(languageShowing==='english')?'flex':'none'}} className='englishTranslation' onClick={toggleLanguageShowing}>\n                    <p>{examplesToReview[currentExampleNumber-1]?examplesToReview[currentExampleNumber-1].englishTranslation:''}</p>\n                </div>\n                <div style = {{display:(languageShowing==='spanish')?'flex':'none'}}className='spanishExample' onClick={toggleLanguageShowing}>\n                    <p>{examplesToReview[currentExampleNumber-1]?examplesToReview[currentExampleNumber-1].spanishExample:''}</p>\n                </div>\n                <ReactHowler src={(currentAudioUrl===\"\")?\"https://mom-academic.s3.us-east-2.amazonaws.com/dbexamples/example+1+spanish+LA.mp3\":currentAudioUrl} playing={playing} />\n\n            </div>\n            <div className='buttonBox'>\n                <button onClick={decrementExample}>Previous Example</button>\n                <button style = {{display: (currentAudioUrl===\"\")? 'none' :'inherit'}} onClick = {togglePlaying}>Play/Pause Audio</button>\n                <button onClick={incrementExample}>Next Example</button>\n            </div>\n            <div className='buttonBox'>\n                <button onClick={toggleQuizReady}>Back to Menu</button>\n            </div>\n            <div className='progressBar2'>                \n                <div className='progressBarDescription'>Example {currentExampleNumber} of {examplesToReview.length}</div>\n            </div>\n        </div>\n    </div>\n    )\n)}","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n  const { isAuthenticated, isLoading, loginWithRedirect } = useAuth0();\n\n  return (!isAuthenticated && !isLoading && (\n  <button onClick={() => loginWithRedirect()}>Log In</button>\n  ))\n};\n\nexport default LoginButton;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n  const { isAuthenticated, isLoading, logout } = useAuth0();\n\n  return (isAuthenticated &&\n    (<button onClick={() => logout({ logoutParams: { returnTo: window.location.origin } })}>\n      Log Out\n    </button>)\n  );\n};\n\nexport default LogoutButton;","import React, {useState, useEffect, useRef} from 'react';\nimport { qb } from './DataModel';\nimport { updateStudentExample } from './QuickbaseFetchFunctions';\nimport './App.css';\nimport ReactHowler from 'react-howler'\nimport { useAuth0 } from '@auth0/auth0-react';\n\n\n\n\nexport default function SimpleQuizApp({studentID, studentName, examplesTable, studentExamplesTable, resetFunction}) {\n    const quizLength = 20;\n    const {user, isAuthorized, getAccessTokenSilently} = useAuth0();\n    //const [studentExamplesTable, setStudentExamplesTable] = useState([])\n    //const [examplesTable, setExamplesTable] = useState([])\n    const [quizReady,setQuizReady] = useState(false);\n    const [examplesToReview, setExamplesToReview] = useState ([])\n    const [currentExampleNumber, setCurrentExampleNumber] = useState(1)\n    const [languageShowing, setLanguageShowing] = useState('english')\n    const [playing, setPlaying] = useState(false)\n    const currentExample = examplesToReview[currentExampleNumber-1]\n    const [difficultySettable, setDifficultySettable] = useState(true)\n    //console.log(currentExample)\n    //console.log(difficultySettable)\n\n\n\n    function togglePlaying() {\n        console.log(`Playing: ${!playing}`)\n        if (playing) {\n            setPlaying(false)\n        } else {\n            setPlaying(true)\n        }\n        \n    }\n    \n    function toggleQuizReady() {\n        setLanguageShowing('english')\n        setPlaying(false)\n        if (quizReady) {\n            resetFunction()\n        } else {\n            setQuizReady(true)\n        }\n    }\n\n    function incrementExample() {\n        if (currentExampleNumber < examplesToReview.length){\n            setCurrentExampleNumber(currentExampleNumber+1)\n        } else {\n            setCurrentExampleNumber(examplesToReview.length)\n        }\n        setLanguageShowing('english')\n        setPlaying(false)\n    }\n    \n    function decrementExample() {\n        if (currentExampleNumber > 1){\n            setCurrentExampleNumber(currentExampleNumber-1)\n        } else {\n            setCurrentExampleNumber(1)\n        }\n        setLanguageShowing('english')\n        setPlaying(false)\n    }\n\n    async function toggleLanguageShowing () {\n        if (languageShowing === 'spanish'){\n            setLanguageShowing('english')\n            setPlaying(false)\n        } else {\n            setLanguageShowing('spanish')\n            setPlaying(false)\n        }\n    }\n\n    async function sendUpdate (exampleId, newInterval) {\n        const today = Date()\n        try {\n            const accessToken = await getAccessTokenSilently({\n              authorizationParams: {\n                audience: \"https://lcs-api.herokuapp.com/\",\n                scope: \"openID email profile\",\n              },\n            });\n            //console.log(accessToken)\n            const userData = await updateStudentExample(accessToken, exampleId, today, newInterval)\n            .then((result) => {\n              //console.log(result)\n            });\n        }   catch (e) {\n            console.log(e.message);\n        }\n    }\n\n    function increaseDifficulty () {\n        const exampleId = getStudentExampleFromExample(currentExample).recordId;\n        const currentInterval = getIntervalFromExample(currentExample);\n        //console.log(studentExamplesTable);\n        //console.log('hard');\n        currentExample.difficulty = 'hard';\n        setDifficultySettable(false)\n        if (currentInterval > 0) {\n            sendUpdate(exampleId, (currentInterval-1))\n        } else {\n            sendUpdate(exampleId, 0)\n        }\n        incrementExample()\n    }\n\n    function decreaseDifficulty () {\n        const exampleId = getStudentExampleFromExample(currentExample).recordId;\n        const currentInterval = getIntervalFromExample(currentExample);\n        //console.log(studentExamplesTable);\n        //console.log('easy')\n        currentExample.difficulty = 'easy';\n        setDifficultySettable(false)\n        if (currentInterval >= 0) {\n        sendUpdate(exampleId, (currentInterval+1));\n        } else {\n            sendUpdate(exampleId, 1)\n        }\n        incrementExample()\n    }\n\n    const getStudentExampleFromExample = (example) => {\n        const relatedStudentExample = studentExamplesTable.find(element => (element.relatedExample\n            ===example.recordId));\n        return relatedStudentExample;\n    }\n\n    const getIntervalFromExample = (example) => {\n        const relatedStudentExample = getStudentExampleFromExample(example);\n        const interval = relatedStudentExample.reviewInterval\n        return interval;\n    }\n\n    const getDueDateFromExample = (example) => {\n        const relatedStudentExample = getStudentExampleFromExample(example);\n        const dueDate = relatedStudentExample.nextReviewDate;\n        return dueDate;\n    }\n\n    function getDueExamples() {\n        try {const isBeforeToday = (dateArg) => {\n            const today = new Date()\n            //console.log(today)\n            const reviewDate = new Date(dateArg)\n            //console.log(reviewDate)\n            if (reviewDate >= today){\n                return false\n            }\n            return true\n        }\n        const allExamples = [...examplesTable]\n        const dueExamples = allExamples.filter((example) => isBeforeToday(getDueDateFromExample(example))&&(example.spanglish ==='esp'))\n        //console.log(dueExamples)\n        return dueExamples\n        }\n        catch(err){\n            console.log(err)\n        }\n    }\n\n    function handleSetupQuiz () {\n        const quizExamples = getDueExamples();\n        function randomize (array) {\n            const randomizedArray = []\n            const vanishingArray = [...array];\n            for (let i = 0; i < array.length; i++) {\n                const randIndex = Math.floor(Math.random()*vanishingArray.length)\n                const randomArrayItem = vanishingArray[randIndex]\n                vanishingArray.splice(randIndex, 1)\n                randomizedArray[i] = randomArrayItem\n                }\n            return randomizedArray\n        }\n        const randomizedQuizExamples = randomize(quizExamples);\n        //console.log(randomizedQuizExamples)\n        const limitedExamples = randomizedQuizExamples.slice(0, quizLength);\n        limitedExamples.forEach(item => {item.difficulty = 'unset'})\n        const examplesWithDifficulty = limitedExamples;\n        //console.log(examplesWithDifficulty)\n        setExamplesToReview(examplesWithDifficulty)\n        toggleQuizReady();\n    }\n\n    const whichAudio = (languageShowing === 'spanish')?'spanishAudioLa':'englishAudio'\n\n    const currentAudioUrl = quizReady && (currentExample)? currentExample[whichAudio]:\"\"\n    \n    useEffect(() => {\n        if(currentExample) {\n            if(currentExample.difficulty === 'unset'){\n                //console.log(currentExample.difficulty)\n                setDifficultySettable(true)\n            } else {\n            //console.log(currentExample.difficulty)\n            setDifficultySettable(false)\n            }\n        }\n        //console.log(difficultySettable);\n    }, [currentExampleNumber])\n\n    if (studentID === 'Loading ID') {\n        return (\n            <div>\n                <h2>Loading...</h2>\n            </div>\n        )\n    }\n\n    return (\n        (studentID) && (\n        <div className='quizInterface'>\n            <div style = {{display:quizReady?'none':'flex', justifyContent: 'space-around'}}>\n                <button onClick={handleSetupQuiz}>Recommended Review (SRS)</button>\n            </div>\n\n            {quizReady && !currentExample && (\n                <div className='finishedMessage'>\n                    <p>Looks like you're all caught up! Come back tomorrow for more, or ask your coach to assign more examples to you.</p>\n                    <div className='buttonBox'>\n                        <button onClick={toggleQuizReady}>Back to Menu</button>\n                    </div>\n                </div>\n            )}\n        \n            {/* Quiz App */}\n            {currentExample && (<div style = {{display:quizReady?'flex':'none'}} className='quiz'>\n                <div className='exampleBox'>\n                    <div style = {{display:(languageShowing==='english')?'flex':'none'}} className='englishTranslation' onClick={toggleLanguageShowing}>\n                        <p>{currentExample?currentExample.englishTranslation:''}</p>\n                    </div>\n                    <div style = {{display:(languageShowing==='spanish')?'flex':'none'}} className='spanishExample' onClick={toggleLanguageShowing}>\n                        <p>{currentExample?currentExample.spanishExample:''}</p>\n                    </div>\n                    <ReactHowler src={(currentAudioUrl===\"\")?\"https://mom-academic.s3.us-east-2.amazonaws.com/dbexamples/example+1+spanish+LA.mp3\":currentAudioUrl} playing={playing} />\n                </div>\n                <div className='quizControls'>\n                    <div className='buttonBox'>\n                        <button className = 'hardButton' style = {{display: (languageShowing==='spanish' && difficultySettable)?'block':'none'}} onClick={increaseDifficulty} >This was hard</button>\n                        <button className = 'easyButton' style = {{display: (languageShowing==='spanish' && difficultySettable)?'block':'none'}} onClick={decreaseDifficulty}>This was easy</button>\n                        <button className = 'hardBanner' style = {{display: (!difficultySettable && currentExample.difficulty === 'hard')?'block':'none'}} >Labeled: Hard</button>\n                        <button className = 'easyBanner' style = {{display: (!difficultySettable && currentExample.difficulty ==='easy')?'block':'none'}} >Labeled: Easy</button>\n                    </div>\n                    <div className='buttonBox'>\n                        <button onClick={decrementExample}>Previous Example</button>\n                        <button style = {{display: (currentAudioUrl===\"\")? 'none' :'block'}} onClick = {togglePlaying}>Play/Pause Audio</button>\n                        <button onClick={incrementExample}>Next Example</button>\n                    </div>\n                    <div className='buttonBox'>\n                        <button onClick={toggleQuizReady}>Back to Menu</button>\n                    </div>\n                    <div className='progressBar2'>                \n                        <div className='progressBarDescription'>Example {currentExampleNumber} of {examplesToReview.length}</div>\n                    </div>\n                </div>\n            </div>)}\n        </div>\n    )\n)\n}","import './App.css';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { getUserDataFromBackend, getStudentExamplesFromBackend, getExamplesFromBackend} from './QuickbaseFetchFunctions';\nimport ExampleRetriever from './ExampleRetriever';\nimport Menu from './Menu';\nimport SimpleQuizApp from './SimpleQuizApp';\nimport LoginButton from './LoginButton';\nimport LogoutButton from './LogoutButton';\nimport SRSQuizApp from './SRSQuizApp';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Profile from './Profile';\nrequire('dotenv').config()\n\nfunction App() {\n  const { user, isAuthenticated, getAccessTokenSilently, isLoading } = useAuth0();\n  const [qbUserData, setQbUserData]= useState({name:'Loading Name',recordId:'Loading ID',emailAddress:'Loading Email'})\n  const [studentExamplesTable, setStudentExamplesTable] = useState([])\n  const [examplesTable, setExamplesTable] = useState([])\n  const [userLoadingComplete, setUserLoadingComplete] = useState(false)\n  const [currentApp, setCurrentApp] = useState(0)\n\n  const appList = ['menu','basicQuiz','srsQuiz']\n\n  //console.log(appList[currentApp]);\n\n  async function getUserData () {\n    //console.log('getting userdata')\n    try {\n      const accessToken = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: \"https://lcs-api.herokuapp.com/\",\n          scope: \"openID email profile\",\n        },\n      });\n      //console.log(accessToken)\n      const userData = await getUserDataFromBackend(accessToken)\n      .then((result) => {\n        //console.log(result)\n        const usefulData = result[0].userData[0];\n        return usefulData\n      });\n      //console.log(userData)\n      setQbUserData(userData)\n    } catch (e) {\n        console.log(e.message);\n    }\n  }\n\n  async function updateExamplesTable () {\n    //console.log('resetting tables')\n    setCurrentApp(0)\n    try {\n      const accessToken = await getAccessTokenSilently({\n        authorizationParams: {\n          audience: \"https://lcs-api.herokuapp.com/\",\n          scope: \"openID email profile\",\n        },\n      });\n      const userStudentExampleData = await getStudentExamplesFromBackend(accessToken)\n      .then((result) => {\n        const usefulData = result\n        //console.log(usefulData)\n        return usefulData\n      });\n      //console.log(userData)\n      setStudentExamplesTable(userStudentExampleData)\n      const userExampleData = await getExamplesFromBackend(accessToken)\n      .then((result) => {\n        const usefulData = result\n        //console.log(usefulData)\n        return usefulData\n      });\n      //console.log(userExampleData)\n      setExamplesTable(userExampleData)\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n\n\n\n  async function userSetup () {\n    try {\n      getUserData();\n      updateExamplesTable();\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  useEffect(() => {\n    if(user) {\n      userSetup()\n    }\n  }, [user])\n\n  useEffect(() => {\n    if(qbUserData.emailAddress !== 'Loading Email' && studentExamplesTable.length > 0 && examplesTable.length > 0) {\n      setUserLoadingComplete(true);\n    }\n  }, [qbUserData.emailAddress, studentExamplesTable.length, examplesTable.length])\n\n  return (\n    <div className=\"App\" style = {{textAlign: 'center'}}>\n      <div className='div-header'style = {{textAlign: 'center'}}>\n        <h1>LearnCraft Spanish</h1>\n        <LogoutButton />\n        <LoginButton />\n      </div>\n      {isLoading && (\n        <h2>Loading...</h2>\n      )}\n      {!isLoading && !isAuthenticated && (\n        <h2>You must be logged in to use this app.</h2>\n      )}\n      {!isLoading && isAuthenticated && !userLoadingComplete && (\n        <h2>Fetching user data...</h2>\n      )}\n      {/*isAuthenticated && (\n        <Profile Name = {qbUserData.name} Email={qbUserData.emailAddress} ID = {qbUserData.recordId}/>\n      )*/}\n      {//(qbUserData.recordId !== 'Loading ID') && (<SimpleQuizApp studentID={qbUserData.recordId} studentName={qbUserData.name} examplesTable={examplesTable} studentExamplesTable={studentExamplesTable}/>)\n      }\n      {(userLoadingComplete) && (\n        <div>\n          <h2>Welcome back, {qbUserData.name}!</h2>\n          {(currentApp===0) && (<Menu setCurrentApp={setCurrentApp} />)}\n          {(currentApp===1) && (<SimpleQuizApp studentID={qbUserData.recordId} studentName={qbUserData.name} examplesTable={examplesTable} studentExamplesTable={studentExamplesTable} resetFunction={updateExamplesTable}/>)}\n          {(currentApp===2) && (<SRSQuizApp studentID={qbUserData.recordId} studentName={qbUserData.name} examplesTable={examplesTable} studentExamplesTable={studentExamplesTable} resetFunction={updateExamplesTable}/>)}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\n\nroot.render(\n  <React.StrictMode>\n    <Auth0Provider\n    domain=\"dev-34nyaerydb7nt4yw.us.auth0.com\"\n    clientId=\"8EjjTUWQkoHPL1DvOfH1xePnqkZ0s8bO\"\n    authorizationParams={{\n      redirect_uri: window.location.origin,\n      audience: \"https://lcs-api.herokuapp.com/\",\n      scope: \"openID email profile read:current_user update:current_user_metadata\"\n    }}\n  >\n      <App />\n    </Auth0Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}